#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = default_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
Scenario.endTime = 10000

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)


LongRangehighspeedInterface.type = SimpleBroadcastInterface
LongRangehighspeedInterface.transmitSpeed = 10M
LongRangehighspeedInterface.transmitRange = 290


# High speed, long range, interface for group 4
LongRangehighspeedInterface.type = SimpleBroadcastInterface
LongRangehighspeedInterface.transmitSpeed = 10M
LongRangehighspeedInterface.transmitRange = 290

# Define 3 different node groups
Scenario.nrofHostGroups = 5


# Common settings for all groups
MovementModel.rngSeed = 1
MovementModel.worldSize = 1000, 1000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000



Group.nrofInterfaces = 1
Group.LinearMovement.initLocType=0
Group.LinearMovement.targetType=5	
Group.movementModel = LinearMovement
#Group.waitTime = 0,0
# Walking speeds

# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300
# cars can drive only on roads
Group.okMaps = 1



# group1 (pedestrians) specific settings
Group1.groupID = s
Group1.router = dstn.DtsnSourceRouter
Group1.nrofHosts = 1
Group1.interface1 = LongRangehighspeedInterface
Group1.speed = 0, 0
#Group1.nodeLocation = 100,100
Group1.LinearMovement.startLocation=900,300
Group1.LinearMovement.endLocation=900,300

# group2 specific settings
Group2.groupID = m1
Group2.router = dstn.DtsnMidRouter
Group2.nrofHosts = 1
Group2.interface1 = LongRangehighspeedInterface
Group2.speed = 0,1
#Group2.nodeLocation = 200,200
Group2.LinearMovement.startLocation=400,100
Group2.LinearMovement.endLocation=400,450

Group4.groupID = m2
Group4.router = dstn.DtsnMidRouter
Group4.nrofHosts = 1
Group4.interface1 = LongRangehighspeedInterface
Group4.speed = 0,1
#Group4.nodeLocation = 200,200
Group4.LinearMovement.startLocation=600,100
Group4.LinearMovement.endLocation=600,450


Group5.groupID = m3
Group5.router = dstn.DtsnMidRouter
Group5.nrofHosts = 1
Group5.interface1 = LongRangehighspeedInterface
Group5.speed = 0,1
#Group5.nodeLocation = 400,400	
Group5.LinearMovement.startLocation=800,100
Group.LinearMovement.endLocation=800,450

# group3 specific settings
Group3.groupID = d
Group3.router = dstn.DtsnDestRouter
Group3.nrofHosts = 1
Group3.interface1 = LongRangehighspeedInterface
Group3.speed = 0, 0
#Group3.nodeLocation = 500,500
Group3.LinearMovement.startLocation=150,300
Group3.LinearMovement.endLocation=150,300






## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = DtsnOneToEachMessageGenerator 
#Events2.class = DtsnOneToEachMessageDeleter 


# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 20
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
####write the destination id
Events1.hosts = 2,2  
Events1.tohosts=0,2
# Message ID prefix
Events1.prefix = M
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events2.interval = 50
# Message sizes (500kB - 1MB)
#Events2.size = 500k,1M
# range of message source/destination addresses
####write the destination id
#Events2.hosts = 4,4  
#Events2.tohosts=0,4
# Message ID prefix
#Events2.prefix = #


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 100
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 0

#MapBasedMovement.mapFile1 = data/roads.wkt
#MapBasedMovement.mapFile2 = data/main_roads.wkt
#MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
#MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 3
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = ContactTimesReport
Report.report2 = ConnectivityONEReport
Report.report3 = DtsnAppReporter


## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true



## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
